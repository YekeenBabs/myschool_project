# Generated by Django 5.0.6 on 2024-07-06 13:00

import django.core.validators
import django.db.models.deletion
import django.utils.crypto
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Class",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("grade_level", models.CharField(blank=True, max_length=50)),
                ("section", models.CharField(blank=True, max_length=10)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("meeting_time", models.CharField(blank=True, max_length=100)),
                ("classroom", models.CharField(blank=True, max_length=100)),
                ("capacity", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("resources", models.URLField(blank=True)),
                ("materials_list", models.TextField(blank=True)),
                ("total_students", models.IntegerField(default=0)),
                ("total_lessons", models.IntegerField(default=0)),
                ("duration", models.IntegerField(default=0)),
                ("total_hours", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(default="Default Department", max_length=255),
                ),
                ("department_id", models.CharField(max_length=20, unique=True)),
                ("department_name", models.CharField(max_length=100)),
                ("head_of_department", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("number_of_students", models.PositiveIntegerField()),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("date", models.DateField()),
                ("start_time", models.TimeField(default=0)),
                ("end_time", models.TimeField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="LibraryBook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("author", models.CharField(max_length=100)),
                ("isbn", models.CharField(max_length=13, unique=True)),
                ("publisher", models.CharField(max_length=100)),
                ("publication_date", models.DateField()),
                ("number_of_copies", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="SchoolClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits, underscores, dots, @, +, -, and spaces allowed.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[\\w.@+-]+$",
                                "Invalid username. Username must consist of letters, numbers, or underscores.",
                            )
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("teacher", "Teacher"),
                            ("parent", "Parent"),
                            ("admin", "Admin"),
                        ],
                        default="student",
                        max_length=10,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must enter in this format",
                                regex="^(\\+98|0)?9\\d{9}$",
                            )
                        ],
                    ),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "last_login",
                    models.DateTimeField(auto_now=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="is_superuser"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="is_staff"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is_active"),
                ),
                (
                    "full_name",
                    models.CharField(max_length=130, verbose_name="full name"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date joined"),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=13,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must enter in this format",
                                regex="^(\\+98|0)?9\\d{9}$",
                            )
                        ],
                    ),
                ),
                (
                    "ida",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="ida must enter in this format",
                                regex="[0-9]{8}",
                            )
                        ],
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="customuser_set", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customuser_set_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("document_week", models.IntegerField(default=1)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("file", models.FileField(upload_to="documents/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("content", models.TextField(default="")),
                ("week", models.IntegerField(default=1)),
                (
                    "class_associated",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="myschool_app.class",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.customuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("is_confirmed", models.BooleanField(default=False)),
                (
                    "class_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="myschool_app.class",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        default="1",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        default="1",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_notifications",
                        to="myschool_app.customuser",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile", models.ImageField(upload_to="profiles/")),
                ("student_card", models.ImageField(upload_to="student_cards/")),
                ("points", models.PositiveIntegerField(default=0)),
                ("gender", models.BinaryField()),
                ("verified", models.BooleanField(default=False)),
                ("slug", models.SlugField()),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "project_type",
                    models.CharField(
                        choices=[
                            ("personal", "Personal"),
                            ("group", "Group"),
                            ("class", "Class"),
                            ("department", "Department"),
                        ],
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("due_date", models.DateTimeField()),
                (
                    "assigned_students",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=200)),
                ("is_correct", models.BooleanField(default=False)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="myschool_app.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deadline", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="question",
            name="quiz",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="myschool_app.quiz",
            ),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "selected_option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.option",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="myschool_app.quiz",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "permissions",
                    models.ManyToManyField(related_name="roles", to="auth.permission"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("middle_name", models.CharField(blank=True, max_length=100)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Others", "Others"),
                        ],
                        max_length=10,
                    ),
                ),
                ("roll_number", models.IntegerField(unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone_number", models.CharField(blank=True, max_length=15)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("religion", models.CharField(blank=True, max_length=50)),
                (
                    "blood_group",
                    models.CharField(
                        blank=True,
                        choices=[("B+", "B+"), ("A+", "A+"), ("O+", "O+")],
                        max_length=10,
                    ),
                ),
                (
                    "student_class",
                    models.CharField(
                        choices=[
                            ("J.S.S. 1", "J.S.S. 1"),
                            ("J.S.S. 2", "J.S.S. 2"),
                            ("J.S.S. 3", "J.S.S. 3"),
                            ("S.S.S. 1", "S.S.S. 1"),
                            ("S.S.S. 2", "S.S.S. 2"),
                            ("S.S.S. 3", "S.S.S. 3"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Art", "Art"),
                            ("Commercial", "Commercial"),
                            ("Science", "Science"),
                        ],
                        max_length=50,
                    ),
                ),
                ("address", models.TextField(blank=True)),
                (
                    "admission_id",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("grades", models.JSONField(blank=True, null=True)),
                ("gpa", models.FloatField(blank=True, null=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=15),
                ),
                ("admission_date", models.DateField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="students/default_student.jpg",
                        null=True,
                        upload_to="students/",
                    ),
                ),
                ("bio", models.TextField(blank=True)),
                ("profile_bg_url", models.URLField(blank=True, null=True)),
                ("profile_img_url", models.URLField(blank=True, null=True)),
                ("club", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "club_duties",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("societies", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "societies_duties",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("sport", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "sport_duties",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("language", models.CharField(blank=True, max_length=50, null=True)),
                ("preferred_name", models.CharField(blank=True, max_length=100)),
                ("registration_number", models.CharField(max_length=20, unique=True)),
                ("grade_level", models.IntegerField()),
                ("parent_name", models.CharField(max_length=100)),
                ("parent_email", models.EmailField(max_length=254)),
                ("parent_phone", models.CharField(max_length=15)),
                (
                    "student_id",
                    models.CharField(
                        default=django.utils.crypto.get_random_string, max_length=10
                    ),
                ),
                ("class_assigned", models.CharField(default="JSS1", max_length=50)),
                ("class_arm", models.CharField(default="A", max_length=10)),
                ("ca1", models.PositiveIntegerField(default=0)),
                ("ca2", models.PositiveIntegerField(default=0)),
                ("ca3", models.PositiveIntegerField(default=0)),
                ("ca4", models.PositiveIntegerField(default=0)),
                (
                    "test_score",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "exam_score",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                ("total_score", models.PositiveIntegerField(default=0)),
                ("grade", models.CharField(default="", max_length=20)),
                ("as1", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as2", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as3", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as4", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as5", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as6", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as7", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as8", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as9", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("as10", models.PositiveIntegerField(blank=True, default=0, null=True)),
                ("quiz1", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz2", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz3", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz4", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz5", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz6", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz7", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz8", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz9", models.IntegerField(blank=True, default=0, null=True)),
                ("quiz10", models.IntegerField(blank=True, default=0, null=True)),
                ("total_quiz", models.IntegerField(default=0)),
                (
                    "personal_project",
                    models.IntegerField(blank=0, default=0, null=True),
                ),
                ("group_project", models.IntegerField(blank=0, default=0, null=True)),
                ("class_project", models.IntegerField(blank=0, default=0, null=True)),
                (
                    "department_project",
                    models.IntegerField(blank=0, default=0, null=True),
                ),
                ("total_project", models.IntegerField(default=0)),
                ("assignment_score", models.IntegerField(blank=True, null=True)),
                ("quiz_score", models.IntegerField(blank=True, null=True)),
                ("project_score", models.IntegerField(blank=True, null=True)),
                ("result", models.JSONField(default=dict)),
                ("classes", models.ManyToManyField(to="myschool_app.class")),
                (
                    "courses",
                    models.ManyToManyField(blank=True, to="myschool_app.course"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReportCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_issued", models.DateField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("grades", models.JSONField()),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuizResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField(default=0.0)),
                ("attempted", models.BooleanField(default=False)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.quiz",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Parent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone_number", models.CharField(blank=True, max_length=15)),
                ("contact_info", models.CharField(blank=True, max_length=20)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address", models.TextField(blank=True)),
                ("city", models.CharField(blank=True, max_length=50)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("country", models.CharField(blank=True, max_length=50)),
                ("relationship", models.CharField(blank=True, max_length=50)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=15),
                ),
                (
                    "emergency_contact_email",
                    models.EmailField(blank=True, max_length=254),
                ),
                ("occupation", models.CharField(blank=True, max_length=100)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.customuser",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=100)),
                ("grade", models.CharField(max_length=10)),
                ("type", models.CharField(max_length=50)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grades_assigned",
                        to="myschool_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Fee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("due_date", models.DateField()),
                ("payment_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("Paid", "Paid"), ("Unpaid", "Unpaid")], max_length=10
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClassArm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=5)),
                (
                    "school_class",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.schoolclass",
                    ),
                ),
                (
                    "students",
                    models.ManyToManyField(
                        related_name="class_arms", to="myschool_app.student"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="class",
            name="students",
            field=models.ManyToManyField(
                related_name="enrolled_classes", to="myschool_app.student"
            ),
        ),
        migrations.CreateModel(
            name="Borrow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("borrow_date", models.DateField()),
                ("return_date", models.DateField(blank=True, null=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.librarybook",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("viewed", models.BooleanField(default=False)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.document",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentQuizAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completed", models.BooleanField(default=False)),
                ("attempted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.quiz",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject_name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("subject_code", models.CharField(max_length=10)),
                ("no_of_students", models.PositiveIntegerField(default=0)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "subject_department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.department",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="student",
            name="subjects",
            field=models.ManyToManyField(
                related_name="students", to="myschool_app.subject"
            ),
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("grade", models.CharField(max_length=2)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("score", models.IntegerField()),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="myschool_app.student",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="quiz",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="myschool_app.subject"
            ),
        ),
        migrations.CreateModel(
            name="LectureVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week", models.IntegerField()),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("file", models.FileField(upload_to="videos/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "class_associated",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="myschool_app.class",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="myschool_app.subject",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="document",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documents",
                to="myschool_app.subject",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="subjects",
            field=models.ManyToManyField(
                related_name="courses", to="myschool_app.subject"
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="subject",
            field=models.ManyToManyField(
                blank=True, related_name="classes", to="myschool_app.subject"
            ),
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[("Present", "Present"), ("Absent", "Absent")],
                        max_length=10,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="submissions/")),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("submission_file", models.FileField(upload_to="submissions/")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="myschool_app.project",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(default="", max_length=255)),
                ("middle_name", models.CharField(default="", max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone_number", models.CharField(blank=True, max_length=15)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("highest_qualification", models.CharField(blank=True, max_length=100)),
                ("certifications", models.TextField(blank=True)),
                ("employee_id", models.CharField(blank=True, max_length=20)),
                ("office_location", models.CharField(blank=True, max_length=100)),
                (
                    "profile_picture",
                    models.ImageField(blank=True, upload_to="profile_pics/"),
                ),
                ("bio", models.TextField(blank=True)),
                (
                    "subject_specialization",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "classes",
                    models.ManyToManyField(
                        default="1",
                        related_name="teachers_classes",
                        to="myschool_app.class",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.department",
                    ),
                ),
                (
                    "subject_taught",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teachers_subjects",
                        to="myschool_app.subject",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("duration", models.DurationField()),
                ("location", models.CharField(max_length=255)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.student",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.teacher",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LectureNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("file", models.FileField(upload_to="lecture_notes/")),
                ("date_uploaded", models.DateField(auto_now_add=True)),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.teacher",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("duration", models.DurationField()),
                ("total_marks", models.IntegerField()),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.teacher",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="class",
            name="new_teachers",
            field=models.ManyToManyField(
                related_name="new_classes", to="myschool_app.teacher"
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="teachers",
            field=models.ManyToManyField(
                blank=True, related_name="teaching_classes", to="myschool_app.teacher"
            ),
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="assignments/"),
                ),
                ("due_date", models.DateField()),
                ("date_assigned", models.DateField(auto_now_add=True)),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.teacher",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeacherClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_assigned",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="class_assigned",
                        to="myschool_app.class",
                    ),
                ),
                (
                    "school_class",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="school_class",
                        to="myschool_app.class",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.teacher",
                    ),
                ),
            ],
            options={
                "db_table": "teacher_class",
            },
        ),
        migrations.CreateModel(
            name="TeacherProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("classes", models.ManyToManyField(to="myschool_app.classarm")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeacherSubjectClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_assigned",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.class",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.teacher",
                    ),
                ),
            ],
            options={
                "db_table": "teacher_subject_class",
            },
        ),
        migrations.AddField(
            model_name="teacher",
            name="subjects",
            field=models.ManyToManyField(
                related_name="teachers",
                through="myschool_app.TeacherSubjectClass",
                to="myschool_app.subject",
            ),
        ),
        migrations.AddField(
            model_name="subject",
            name="assigned_teacher",
            field=models.ManyToManyField(
                related_name="assigned_subjects",
                through="myschool_app.TeacherSubjectClass",
                to="myschool_app.teacher",
            ),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True)),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "profile_picture",
                    models.ImageField(blank=True, upload_to="profile_pictures/"),
                ),
                ("location", models.CharField(blank=True, max_length=100)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.customuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("file", models.FileField(upload_to="videos/")),
                ("date_uploaded", models.DateField(auto_now_add=True)),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myschool_app.teacher",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="teachersubjectclass",
            constraint=models.UniqueConstraint(
                fields=("teacher", "subject", "class_assigned"),
                name="unique_teacher_subject_class",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="teachersubjectclass",
            unique_together={("teacher", "subject")},
        ),
    ]
